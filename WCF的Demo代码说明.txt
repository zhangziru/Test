WCF比较全的一个Demo（作者：张子儒，英文名：Cyrus）
【服务端】自我寄宿（Self-Hosting）,IIS寄宿（IIS-Hosting）,至于WinForm寄宿和Windwos服务寄宿都与Self-Hosting（自我寄宿）原理上没什么区别
Self-Hosting(自我寄宿)配置方式有两种：1、通过代码配置服务；2、通过配置文件配置
【客户端】
Self-Hosting（自我寄宿）客户端调用方式有两种：1、通过添加服务引用；2、通过代码配置
IIS-Hosting(IIS寄宿)客户端调用方式有两种：1、通过添加服务引用；2、通过代码配置
【备注说明】
1、寄宿于IIS，服务文件必须是.svc文件结尾的wcf服务文件。WebService是通过.asmx文件来对服务的调用。WCF是通过.svc文件对服务的调用。
2、自我寄宿，服务文件用.cs文件即可。这个跟平常的写的类文件没什么区别，就是实现了我们定义的契约（Contract）文件（接口）
3、寄宿于IIS，服务文件必须放在Web项目里，契约（Contract）可以单独放到一个项目进行管理。（如果项目逻辑不是很庞大，规模中小型可以使用这种方式来部署，跟网站一起部署也是可以的，由于这样相对比较的繁琐，如果只是做一些小的服务，小型的服务发布，建议还是使用MVC WebAPI这样更加的方便。中型的还是使用正规的做法单独的做一个服务项目寄宿于IIS进行管理）
4、自我寄宿，服务（Service）文件和契约（Contract）文件都可以单独放到一个项目里进行管理。（如果项目比较的复杂，比较的庞大建议采用这用方式来构建服务。）
5、WCF项目问题2-无法激活服务：参考这个链接：http://www.bubuko.com/infodetail-2017513.html。具体的在项目【HostingIIS】配置文件都有配置说明，然后按照IIS中报的错误提示进行修改即可
6、项目结构的介绍：
1）Contract:契约项目（项目功能的定义，光说不做，把控整个功能板块）
2）Service：服务项目（实现了契约中的服务定义，干活的主体项目）
3）Hosting：【服务发布】服务寄宿于控制台，自我寄宿（Self-Hosting），服务配置方式包括两种：1、通过代码配置服务；2、通过配置文件配置
4）Client：【self-hosting 服务调用】“添加服务引用”调用服务
5）Client-ChannelFactory：【self-hosting 服务调用】“通过代码配置”调用服务
6）HostingIIS:【服务发布-服务寄宿于IIS】备注：本地人发布到了本地的IIS中，ip地址未分配，本机地址，端口号9095；发布WCF，需要装IIS和WCF的一些相关配置文件。不清楚的请看这个链接：https://blog.csdn.net/heyangyi_19940703/article/details/51831094
7）Client-HostingIIS-addRefrence：【IIS-hosting 服务调用】“添加服务引用”调用服务
8）Client-HostingIIS:【IIS-hosting 服务调用】“通过代码配置”调用服务，这个如何配置看下面的链接：https://www.cnblogs.com/pnljs/p/3765892.html。把生成的文件粘贴到你的客户端，并把相关的配置配置到你项目的配置文件中

9）WcfService1：【随便添加的WCF应用程序】，为了方便自己写注释。这个里面的注释信息比较的完整，都是微软提供的。
